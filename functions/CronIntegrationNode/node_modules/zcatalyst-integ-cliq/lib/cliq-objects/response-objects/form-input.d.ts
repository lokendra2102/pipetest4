import { DATA_SOURCE_TYPE, FORM_FIELD_TYPE, FORM_FORMAT } from '../common.js';
import FormValue from './form-value.js';
export default class FormInput {
    type?: FORM_FIELD_TYPE;
    trigger_on_change?: boolean;
    name?: string;
    label?: string;
    hint?: string;
    placeholder?: string;
    mandatory?: boolean;
    value?: unknown;
    options?: Array<FormValue>;
    format?: FORM_FORMAT;
    max_length?: string;
    min_length?: string;
    max_selections?: string;
    /**
     * @deprecated - property name misspelled
     *
     * Use {@link boundary} instead.
     */
    boundry?: Boundry;
    boundary?: Boundary;
    max?: number;
    min?: number;
    multiple?: boolean;
    data_source?: DATA_SOURCE_TYPE;
    auto_search_min_results?: number;
    min_characters?: number;
    newFormValue(label?: string, value?: string): FormValue;
    addOption(...formValue: Array<FormValue>): number;
    /**
     * @deprecated - Misspelled function name
     *
     * Use {@link newBoundary} instead.
     */
    newBoundry(latitude?: number, longitude?: number, radius?: number): Boundry;
    newBoundary(latitude?: number, longitude?: number, radius?: number): Boundary;
}
/**
 * @deprecated - class name misspelled
 *
 * Use {@link Boundary} instead.
 */
declare class Boundry {
    latitude?: number;
    longitude?: number;
    radius?: number;
    constructor(latitude?: number, longitude?: number, radius?: number);
}
declare class Boundary {
    latitude?: number;
    longitude?: number;
    radius?: number;
    constructor(latitude?: number, longitude?: number, radius?: number);
}
export {};
